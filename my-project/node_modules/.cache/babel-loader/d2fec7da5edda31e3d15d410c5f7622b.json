{"remainingRequest":"/Users/lisa/Desktop/study/all/my-project/node_modules/babel-loader/lib/index.js!/Users/lisa/Desktop/study/all/my-project/node_modules/eslint-loader/index.js??ref--13-0!/Users/lisa/Desktop/study/all/my-project/src/config/formValidation.js","dependencies":[{"path":"/Users/lisa/Desktop/study/all/my-project/src/config/formValidation.js","mtime":1583994301366},{"path":"/Users/lisa/Desktop/study/all/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/all/my-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/all/my-project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKdmFyIGZvcm1WYWxpZGF0aW9uID0gewogIG1vYmlsZTogZnVuY3Rpb24gbW9iaWxlKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgdmFyIHJlZyA9IC9eMSgzfDR8NXw3fDgpXGR7OX0kLzsKCiAgICBpZiAoIXJlZy50ZXN0KHZhbHVlKSkgewogICAgICBjYWxsYmFjaygn6K+36L6T5YWl5q2j56Gu55qE5omL5py65Y+3Jyk7CiAgICB9IGVsc2UgewogICAgICBjYWxsYmFjaygpOwogICAgfQogIH0sCiAgLy8g6YKu57yW6aqM6K+BCiAgcG9zdGNvZGU6IGZ1bmN0aW9uIHBvc3Rjb2RlKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgdmFyIHJlZyA9IC9eWzAtOV17Nn0kLzsKCiAgICBpZiAoIXJlZy50ZXN0KHZhbHVlKSkgewogICAgICBjYWxsYmFjaygi6K+36L6T5YWl5q2j56Gu55qE6YKu57yWIik7CiAgICB9IGVsc2UgewogICAgICBjYWxsYmFjaygpOwogICAgfQogIH0sCiAgLy8gcXHpqozor4EKICBxcTogZnVuY3Rpb24gcXEocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICB2YXIgcXFQYXR0ZXJuID0gL15bMS05XVswLTldezQsMTB9JC87CgogICAgaWYgKCFxcVBhdHRlcm4udGVzdCh2YWx1ZSkpIHsKICAgICAgY2FsbGJhY2soIuivt+i+k+WFpeato+ehrueahHFx5Y+3Iik7CiAgICB9IGVsc2UgewogICAgICBjYWxsYmFjaygpOwogICAgfQogIH0sCiAgLy8g6L2m54mM5Y+3CiAgcGxhdGVOdW06IGZ1bmN0aW9uIHBsYXRlTnVtKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgaWYgKHZhbHVlID09ICIiIHx8IHZhbHVlID09IHVuZGVmaW5lZCkgewogICAgICBjYWxsYmFjaygpOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgdmFyIHhyZWcgPSAvXlvkuqzmtKXmsqrmuJ3lhoDosavkupHovr3pu5HmuZjnmpbpsoHmlrDoi4/mtZnotaPphILmoYLnlJjmmYvokpnpmZXlkInpl73otLXnsqTpnZLol4/lt53lroHnkLzkvb/pooZBLVpdezF9W0EtWl17MX1bQS1aMC05XXs0fVtBLVowLTnmjILlraborabmuK/mvrNdezF9JC87IC8v6L6T5Ye6IHRydWUKCiAgICBpZiAodmFsdWUubGVuZ3RoID09IDcpIHsKICAgICAgaWYgKCF4cmVnLnRlc3QodmFsdWUuc3Vic3RyKDAsIDIpKSkgewogICAgICAgIGNhbGxiYWNrKCfor7fovpPlhaXmraPnoa7nmoTovabniYzlj7fnoIEnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9IGVsc2UgaWYgKHZhbHVlLmxlbmd0aCA9PSA4KSB7CiAgICAgIGlmICgheHJlZy50ZXN0KHZhbHVlLnN1YnN0cigwLCAyKSkpIHsKICAgICAgICBjYWxsYmFjaygn6K+36L6T5YWl5q2j56Gu55qE6L2m54mM5Y+356CBJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgY2FsbGJhY2soJ+ivt+i+k+WFpeato+ehrueahOi9pueJjOWPt+eggScpOwogICAgfQogIH0sCiAgLy8g5bm06b6E77yaCiAgYWdlOiBmdW5jdGlvbiBhZ2UocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICB2YXIgcmVnID0gL15bMC05XSpbMS05XVswLTldKiQvOwoKICAgIGlmICghKHJlZy50ZXN0KHZhbHVlKSB8fCBOdW1iZXIodmFsdWUpID09PSAwKSkgewogICAgICBjYWxsYmFjaygn6K+36L6T5YWl5aSn5LqO562J5LqOMOeahOaVtOaVsCcpOwogICAgfSBlbHNlIHsKICAgICAgY2FsbGJhY2soKTsKICAgIH0KICB9LAogIC8vIOWvhueggQogIHBhc3N3b3JkOiBmdW5jdGlvbiBwYXNzd29yZChydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgIHZhciByZWcgPSAvXi4qKD89Lns2LH0pKD89LipcZCkoPz0uKltBLVpdKSg/PS4qW2Etel0pKD89LipbIUAjJCVeJio/IF0pLiokLzsKCiAgICBpZiAoIXJlZy50ZXN0KHZhbHVlKSkgewogICAgICBjYWxsYmFjaygn5pyA5bCRNuS9je+8jOWMheaLrOiHs+WwkTHkuKrlpKflhpnlrZfmr43vvIwx5Liq5bCP5YaZ5a2X5q+N77yMMeS4quaVsOWtl++8jDHkuKrnibnmrorlrZfnrKYnKTsKICAgIH0gZWxzZSB7CiAgICAgIGNhbGxiYWNrKCk7CiAgICB9CiAgfSwKICAvLyDouqvku73or4EKICBpZDogZnVuY3Rpb24gaWQocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICB2YXIgY1AgPSAvXlsxLTldXGR7NX0oMTh8MTl8KFsyM11cZCkpXGR7Mn0oKDBbMS05XSl8KDEwfDExfDEyKSkoKFswLTJdWzEtOV0pfDEwfDIwfDMwfDMxKVxkezN9WzAtOVh4XSQvOwoKICAgIGlmICghY1AudGVzdCh2YWx1ZSkpIHsKICAgICAgY2FsbGJhY2soIui6q+S7veivgeacieivryIpOwogICAgfSBlbHNlIHsKICAgICAgY2FsbGJhY2soKTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IGZvcm1WYWxpZGF0aW9uOw=="},{"version":3,"sources":["/Users/lisa/Desktop/study/all/my-project/src/config/formValidation.js"],"names":["formValidation","mobile","rule","value","callback","reg","test","postcode","qq","qqPattern","plateNum","undefined","xreg","length","substr","age","Number","password","id","cP"],"mappings":";AAAA,IAAMA,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAC/B,QAAMC,GAAG,GAAG,qBAAZ;;AACA,QAAI,CAACA,GAAG,CAACC,IAAJ,CAASH,KAAT,CAAL,EAAsB;AAClBC,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ;AACX;AACJ,GARkB;AASnB;AACAG,EAAAA,QAAQ,EAAE,kBAACL,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AACjC,QAAMC,GAAG,GAAG,YAAZ;;AACA,QAAI,CAACA,GAAG,CAACC,IAAJ,CAASH,KAAT,CAAL,EAAsB;AAClBC,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ;AACX;AACJ,GAjBkB;AAkBnB;AACAI,EAAAA,EAAE,EAAE,YAACN,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAC3B,QAAIK,SAAS,GAAG,oBAAhB;;AACA,QAAI,CAACA,SAAS,CAACH,IAAV,CAAeH,KAAf,CAAL,EAA4B;AACxBC,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ;AACX;AACJ,GA1BkB;AA2BnB;AACAM,EAAAA,QAAQ,EAAE,kBAACR,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AACjC,QAAID,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAIQ,SAA5B,EAAuC;AACnCP,MAAAA,QAAQ;AACR,aAAO,KAAP;AACH;;AACD,QAAIQ,IAAI,GAAG,gFAAX,CALiC,CAMjC;;AACA,QAAIT,KAAK,CAACU,MAAN,IAAgB,CAApB,EAAuB;AACnB,UAAI,CAACD,IAAI,CAACN,IAAL,CAAUH,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAV,CAAL,EAAoC;AAChCV,QAAAA,QAAQ,CAAC,YAAD,CAAR;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ;AACX;AACJ,KAND,MAMO,IAAID,KAAK,CAACU,MAAN,IAAgB,CAApB,EAAuB;AAC1B,UAAI,CAACD,IAAI,CAACN,IAAL,CAAUH,KAAK,CAACW,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAV,CAAL,EAAoC;AAChCV,QAAAA,QAAQ,CAAC,YAAD,CAAR;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ;AACX;AACJ,KANM,MAMA;AACHA,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACH;AACJ,GAlDkB;AAmDnB;AACAW,EAAAA,GAAG,EAAE,aAACb,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAC5B,QAAMC,GAAG,GAAG,qBAAZ;;AACA,QAAI,EAAEA,GAAG,CAACC,IAAJ,CAASH,KAAT,KAAoBa,MAAM,CAACb,KAAD,CAAN,KAAkB,CAAxC,CAAJ,EAAiD;AAC7CC,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ;AACX;AACJ,GA3DkB;AA4DnB;AACAa,EAAAA,QAAQ,EAAE,kBAACf,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AACjC,QAAMC,GAAG,GAAG,iEAAZ;;AACA,QAAI,CAAEA,GAAG,CAACC,IAAJ,CAASH,KAAT,CAAN,EAAwB;AACpBC,MAAAA,QAAQ,CAAC,oCAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ;AACX;AACJ,GApEkB;AAqEnB;AACAc,EAAAA,EAAE,EAAE,YAAChB,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAC3B,QAAMe,EAAE,GAAG,8FAAX;;AACA,QAAI,CAACA,EAAE,CAACb,IAAH,CAAQH,KAAR,CAAL,EAAqB;AACjBC,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ;AACX;AACJ;AA7EkB,CAAvB;AAiFA,eAAeJ,cAAf","sourcesContent":["const formValidation = {\n    mobile: (rule, value, callback) => {\n        const reg = /^1(3|4|5|7|8)\\d{9}$/;\n        if (!reg.test(value)) {\n            callback('请输入正确的手机号')\n        } else {\n            callback()\n        }\n    },\n    // 邮编验证\n    postcode: (rule, value, callback) => {\n        const reg = /^[0-9]{6}$/;\n        if (!reg.test(value)) {\n            callback(\"请输入正确的邮编\")\n        } else {\n            callback();\n        }\n    },\n    // qq验证\n    qq: (rule, value, callback) => {\n        var qqPattern = /^[1-9][0-9]{4,10}$/;\n        if (!qqPattern.test(value)) {\n            callback(\"请输入正确的qq号\")\n        } else {\n            callback();\n        }\n    },\n    // 车牌号\n    plateNum: (rule, value, callback) => {\n        if (value == \"\" || value == undefined) {\n            callback()\n            return false\n        }\n        var xreg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/;\n        //输出 true\n        if (value.length == 7) {\n            if (!xreg.test(value.substr(0, 2))) {\n                callback('请输入正确的车牌号码')\n            } else {\n                callback()\n            }\n        } else if (value.length == 8) {\n            if (!xreg.test(value.substr(0, 2))) {\n                callback('请输入正确的车牌号码')\n            } else {\n                callback()\n            }\n        } else {\n            callback('请输入正确的车牌号码')\n        }\n    },\n    // 年龄：\n    age: (rule, value, callback) => {\n        const reg = /^[0-9]*[1-9][0-9]*$/\n        if (!(reg.test(value) || (Number(value) === 0))) {\n            callback('请输入大于等于0的整数')\n        } else {\n            callback()\n        }\n    },\n    // 密码\n    password: (rule, value, callback) => {\n        const reg = /^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/\n        if (!(reg.test(value))) {\n            callback('最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符')\n        } else {\n            callback()\n        }\n    },\n    // 身份证\n    id: (rule, value, callback) => {\n        const cP = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\n        if (!cP.test(value)) {\n            callback(\"身份证有误\")\n        } else {\n            callback()\n        }\n    }\n\n}\n\nexport default formValidation"]}]}