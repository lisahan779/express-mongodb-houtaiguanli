{"remainingRequest":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/babel-loader/lib/index.js!/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/HelloWorld.vue","mtime":1584670543365},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9saXNhL0Rlc2t0b3Avc3R1ZHkvbW9uZ29kYitleHByZXNzL215LXByb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyDmiJHlvbvlupXokpnkuobvvIwg6Zmk5LqG5LiA5Lqb54m55Yir55qE5piv5Ye95pWw77yM5Yir55qE6YO95pivOgovLyDlr7zlhaXotK3nianovabnu4Tku7YKLy8gaW1wb3J0IENhcnQgZnJvbSAiLi9hZGRzaG9wcGluZy52dWUiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSGVsbG9Xb3JsZCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNob3c6IGZhbHNlCiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIC8vIOaMh+WumuaOpeWPl+WPguaVsOeahOexu+WeiwogICAgbXNnOiBTdHJpbmcKICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZEl0ZW06IGZ1bmN0aW9uIGFkZEl0ZW0oaW5kZXgpIHsKICAgICAgLy8g5b6X5Yiw6K+l5ZWG5ZOBCiAgICAgIHZhciBnb29kID0gdGhpcy5nb29kc1tpbmRleF07CiAgICAgIHZhciBpdGVtID0gdGhpcy5jYXJ0TGlzdC5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0uaWQgPT0gZ29vZC5pZDsKICAgICAgfSk7IC8vIOWmguaenGl0ZW0g5LiN5Li656m677yM5YiZ6KGo56S65bey57uP5re75Yqg5Yiw6LSt6L2m5Lit5LqGCgogICAgICBpZiAoaXRlbSkgewogICAgICAgIGl0ZW0uY291bnQgKz0gMTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmNhcnRMaXN0LnB1c2goX29iamVjdFNwcmVhZCh7fSwgZ29vZCwgewogICAgICAgICAgY291bnQ6IDEsCiAgICAgICAgICBhY3RpdmU6IHRydWUKICAgICAgICB9KSk7CiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKHsKICAgIC8vIOiwg+eUqGdldHRlcnPmi7/mlbDmja4s5ou/5Yiw55qE5pivZXhwcmVzc+S4reeahGRhdGEKICAgIGNhcnRpbmZvOiAiR0VUQ0FSVCIKICB9KSksCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIHRoaXMuX2luaXRQYWdlRGF0YSgpCiAgICAvLyDlj5HpgIHlrZjmlbDmja7mjIfku6TosIPnlKhhY3Rpb25z6YeM55qE5pa55rOV77yM5aaC5p6c5rKh5ZOf6L+Z5q2l77yM5piv6I635Y+W5LiN5Yiw5pWw5o2u55qECiAgICAvLyAnSU5JVENBUlQn5pivYWN0aW9uc+mHjOeahFtJTklUQ0FSVF3nmoTlrp7kvosKICAgIC8vIHN0b3Jl5pivbWFpbi5qc+mHjOWumuS5ieeahOWunuS+i+WMlueahHZ1ZXgKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJJTklUQ0FSVCIpOwogIH0KfTs="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AAEA;AAEA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,KAAA,EAAA;AACA;AAEA,IAAA,GAAA,EAAA;AAHA,GAPA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,KADA,EACA;AACA;AAEA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA;AAEA,UAAA,IAAA,GAAA,KAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,IAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA,CALA,CAOA;;AAEA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,KAAA,IAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,CAAA,IAAA,mBACA,IADA;AAEA,UAAA,KAAA,EAAA,CAFA;AAIA,UAAA,MAAA,EAAA;AAJA;AAMA;AACA;AApBA,GAbA;AAmCA,EAAA,QAAA,oBAIA,UAAA,CAAA;AACA;AACA,IAAA,QAAA,EAAA;AAFA,GAAA,CAJA,CAnCA;AA4CA,EAAA,OA5CA,qBA4CA;AACA;AACA;AACA;AACA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,UAAA;AAEA;AAnDA,CAAA","sourcesContent":["<template>\n  <!--  每个组件必须有一个根组件，这点要明确的知道！ -->\n  <div>\n    <h1>{{ msg }}</h1>\n\n    <!--  商品列表信息 -->\n\n    <ul>\n      <li>\n        <button @click=\"addItem(index)\">添加到购物车</button>\n      </li>\n    </ul>\n    <div>{{cartinfo}}</div>\n    <!--  购物车信息 -->\n\n    <!--  使用注册进来的组件 -->\n\n    <!-- <cart name=\"action\" :cartList=\"cartList\"></cart> -->\n  </div>\n</template>\n\n \n\n<script>\n// 我彻底蒙了， 除了一些特别的是函数，别的都是:\n\n// 导入购物车组件\n\n// import Cart from \"./addshopping.vue\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      show: false,\n    }\n  },\n  props: {\n    // 指定接受参数的类型\n\n    msg: String\n  },\n\n  methods: {\n    addItem(index) {\n      // 得到该商品\n\n      const good = this.goods[index];\n\n      const item = this.cartList.find(item => item.id == good.id);\n\n      // 如果item 不为空，则表示已经添加到购车中了\n\n      if (item) {\n        item.count += 1;\n      } else {\n        this.cartList.push({\n          ...good,\n          count: 1,\n\n          active: true\n        });\n      }\n    }\n  },\n  computed: {\n    // 就相当于vuex.mapGetters\n    // 解构赋值\n    // computed里面的数据不需要在data中定义接收\n    ...mapGetters({\n      // 调用getters拿数据,拿到的是express中的data\n      cartinfo: \"GETCART\"\n    })\n  },\n  created() {\n    // this._initPageData()\n    // 发送存数据指令调用actions里的方法，如果没哟这步，是获取不到数据的\n    // 'INITCART'是actions里的[INITCART]的实例\n    // store是main.js里定义的实例化的vuex\n    this.$store.dispatch(\"INITCART\");\n    \n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n\n  padding: 0;\n}\n\nli {\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>"],"sourceRoot":"src/components"}]}