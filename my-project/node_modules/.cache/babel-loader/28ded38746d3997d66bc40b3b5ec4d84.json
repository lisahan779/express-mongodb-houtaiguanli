{"remainingRequest":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/babel-loader/lib/index.js!/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/imgupload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/imgupload.vue","mtime":1587974711765},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW4iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGwiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBRUkNvZGUgZnJvbSAicXJjb2RlanMyIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtSW5saW5lOiB7CiAgICAgICAgaW1nOiAiIgogICAgICB9LAogICAgICBmbGFnZTogZmFsc2UsCiAgICAgIGJhc2U2NDogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGxvYWRQaG90bzogZnVuY3Rpb24gdXBsb2FkUGhvdG8oZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8g5Yip55SoZmlsZVJlYWRlcuWvueixoeiOt+WPlmZpbGUKICAgICAgdmFyIGZpbGUgPSBlLnRhcmdldC5maWxlc1swXTsKICAgICAgdmFyIGZpbGVzaXplID0gZmlsZS5zaXplOwogICAgICB2YXIgZmlsZW5hbWUgPSBmaWxlLm5hbWU7CiAgICAgIGNvbnNvbGUubG9nKGZpbGVuYW1lKTsgLy8gMiw2MjEsNDQwICAgMk0KCiAgICAgIGlmIChmaWxlc2l6ZSA+IDIxMDE0NDApIHsvLyDlm77niYflpKfkuo4yTUIKICAgICAgfQoKICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwoKICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgLy8g6K+75Y+W5Yiw55qE5Zu+54mHYmFzZTY0IOaVsOaNrue8lueggSDlsIbmraTnvJbnoIHlrZfnrKbkuLLkvKDnu5nlkI7lj7DljbPlj68KICAgICAgICB2YXIgaW1nY29kZSA9IGUudGFyZ2V0LnJlc3VsdDsgLy8gbGV0IHRoYXQ9dGhpczsKCiAgICAgICAgX3RoaXMuZm9ybUlubGluZS5pbWcgPSBpbWdjb2RlOyAvLyBjb25zb2xlLmxvZygxMTEsaW1nY29kZSk7CgogICAgICAgIF90aGlzLiRodHRwLnBvc3QoIi91cGxvYWRzL3RyYW5zZmVyIiwgewogICAgICAgICAgZmlsZW5hbWU6IGZpbGVuYW1lLAogICAgICAgICAgZmlsZXNpemU6IGZpbGVzaXplLAogICAgICAgICAgYmFzZTY0OiBpbWdjb2RlCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpcy5iYXNlNjQgPSByZXMuZGF0YS5iYXNlNjQ7IC8vIGNvbnNvbGUubG9nKHJlcy5kYXRhKQoKICAgICAgICAgIF90aGlzLmZsYWdlID0gdHJ1ZTsgLy8gY29uc29sZS5sb2coIuWbvueJh+S4iuS8oOaIkOWKn++8gSIpOwogICAgICAgIH0pOwogICAgICB9OwogICAgfSwKICAgIC8vIOS6jOe7tOeggQogICAgbWFrZVFSQ29kZTogZnVuY3Rpb24gbWFrZVFSQ29kZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBRUkNvZGUudG9EYXRhVVJMKCJodHRwOi8vYWFhLnZ2LmNvbS9lcnAvY2FyZD9hdXRoa2V5PTIxM3NkYWMiKS50aGVuKGZ1bmN0aW9uIChpbWdEYXRhKSB7CiAgICAgICAgaWYgKGltZ0RhdGEpIHsKICAgICAgICAgIHZhciBmaWxlID0gX3RoaXMyLmNvbnZlcnRCYXNlNjRVcmxUb0Jsb2IoaW1nRGF0YSk7IC8vIOS4iuS8oOWIsOacjeWKoeWZqO+8iOi/memHjOaYr+S4iuS8oOWIsOmYv+mHjOS6ke+8jHRoaXMub3Nz5piv55u05o6l5oqK6Zi/6YeM5LqR55qEb3Nz6L+e5o6l5L2c5Li6VnVl5a+56LGh55qE5bGe5oCn5p2l6LCD55SoLHB1dOaYr+S4iuS8oOaWh+S7tueahOaWueazle+8iQoKCiAgICAgICAgICBfdGhpczIub3NzLnB1dCgncXJjb2RlJyArIE1hdGgucmFuZG9tKCkgKiAxMCArICcucG5nJywgZmlsZSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICAgIF90aGlzMi5xcmNvZGUgPSByZXN1bHQudXJsOyAvLyDlsIblt7LkuIrkvKDnmoTlm77niYfnmoR1cmzotYvlgLznu5lpbWfnmoRzcmMKCiAgICAgICAgICAgIGFsZXJ0KCfnlJ/miJDmiJDlip8nKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgY29udmVydEJhc2U2NFVybFRvQmxvYjogZnVuY3Rpb24gY29udmVydEJhc2U2NFVybFRvQmxvYih1cmxEYXRhKSB7CiAgICAgIHZhciBieXRlcyA9IHdpbmRvdy5hdG9iKHVybERhdGEuc3BsaXQoJywnKVsxXSk7IC8v5Y675o6JdXJs55qE5aS077yM5bm26L2s5o2i5Li6Ynl0ZQogICAgICAvL+WkhOeQhuW8guW4uCzlsIZhc2NpaeeggeWwj+S6jjDnmoTovazmjaLkuLrlpKfkuo4wCgogICAgICB2YXIgYWIgPSBuZXcgQXJyYXlCdWZmZXIoYnl0ZXMubGVuZ3RoKTsKICAgICAgdmFyIGlhID0gbmV3IFVpbnQ4QXJyYXkoYWIpOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBieXRlcy5sZW5ndGg7IGkrKykgewogICAgICAgIGlhW2ldID0gYnl0ZXMuY2hhckNvZGVBdChpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG5ldyBCbG9iKFthYl0sIHsKICAgICAgICB0eXBlOiAnaW1hZ2UvcG5nJwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["imgupload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,MAAA,MAAA,WAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,GAAA,EAAA;AADA,OADA;AAIA,MAAA,KAAA,EAAA,KAJA;AAKA,MAAA,MAAA,EAAA;AALA,KAAA;AAOA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,CADA,EACA;AAAA;;AACA;AACA,UAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,IAAA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EALA,CAMA;;AACA,UAAA,QAAA,GAAA,OAAA,EAAA,CACA;AACA;;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;AACA,MAAA,MAAA,CAAA,aAAA,CAAA,IAAA;;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,EAAA;AACA;AACA,YAAA,OAAA,GAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAFA,CAGA;;AACA,QAAA,KAAA,CAAA,UAAA,CAAA,GAAA,GAAA,OAAA,CAJA,CAKA;;AACA,QAAA,KAAA,CAAA,KAAA,CACA,IADA,CACA,mBADA,EACA;AACA,UAAA,QAAA,EAAA,QADA;AAEA,UAAA,QAAA,EAAA,QAFA;AAGA,UAAA,MAAA,EAAA;AAHA,SADA,EAMA,IANA,CAMA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CADA,CAEA;;AACA,UAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAHA,CAIA;AACA,SAXA;AAYA,OAlBA;AAmBA,KAhCA;AAiCA;AACA,IAAA,UAlCA,wBAkCA;AAAA;;AACA,MAAA,MAAA,CAAA,SAAA,CAAA,4CAAA,EAAA,IAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,EAAA;AACA,cAAA,IAAA,GAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,CADA,CAEA;;;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,GAAA,CAAA,WAAA,IAAA,CAAA,MAAA,KAAA,EAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,GAAA,CADA,CACA;;AACA,YAAA,KAAA,CAAA,MAAA,CAAA;AACA,WAHA;AAIA;AACA,OATA;AAUA,KA7CA;AA8CA,IAAA,sBA9CA,kCA8CA,OA9CA,EA8CA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CADA,CACA;AACA;;AACA,UAAA,EAAA,GAAA,IAAA,WAAA,CAAA,KAAA,CAAA,MAAA,CAAA;AACA,UAAA,EAAA,GAAA,IAAA,UAAA,CAAA,EAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,EAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA,UAAA,CAAA,CAAA,CAAA;AACA;;AACA,aAAA,IAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,CAAA;AACA;AAvDA;AAVA,CAAA","sourcesContent":["<template>\n  <div class=\"power\">\n    <input @change=\"uploadPhoto($event)\" type=\"file\" class=\"kyc-passin\" />\n    <img v-if=\"flage\" :src=\"base64\" alt=\"上传图片\" style=\"width:400px;height:400px \" />\n    <!-- // 这种可以打开相机或文件，\"jpg,png,gif\"这种打开只能上传特定文件且没有相机 -->\n    <div>\n      <span class=\"right-btn\" @click=\"makeQRCode\">生成二维码</span>\n    </div>\n    <div class=\"column-body-content text-center\">\n      <div class=\"qr-code\">\n        <img id=\"image\" :src=\"qrcode\" />\n        <p>扫码预览</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport QRCode from \"qrcodejs2\";\nexport default {\n  data() {\n    return {\n      formInline: {\n        img: \"\"\n      },\n      flage: false,\n      base64: \"\"\n    };\n  },\n  methods: {\n    uploadPhoto(e) {\n      // 利用fileReader对象获取file\n      var file = e.target.files[0];\n      var filesize = file.size;\n      var filename = file.name;\n      console.log(filename);\n      // 2,621,440   2M\n      if (filesize > 2101440) {\n        // 图片大于2MB\n      }\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = e => {\n        // 读取到的图片base64 数据编码 将此编码字符串传给后台即可\n        var imgcode = e.target.result;\n        // let that=this;\n        this.formInline.img = imgcode;\n        // console.log(111,imgcode);\n        this.$http\n          .post(\"/uploads/transfer\", {\n            filename: filename,\n            filesize: filesize,\n            base64: imgcode\n          })\n          .then(res => {\n            this.base64 = res.data.base64;\n            // console.log(res.data)\n            this.flage = true;\n            // console.log(\"图片上传成功！\");\n          });\n      };\n    },\n    // 二维码\n    makeQRCode() {\n    QRCode.toDataURL(\"http://aaa.vv.com/erp/card?authkey=213sdac\").then(imgData => {\n        if(imgData) {\n            let file = this.convertBase64UrlToBlob(imgData);\n            // 上传到服务器（这里是上传到阿里云，this.oss是直接把阿里云的oss连接作为Vue对象的属性来调用,put是上传文件的方法）\n            this.oss.put('qrcode' + Math.random()*10 + '.png', file).then(result => {\n                 this.qrcode = result.url; // 将已上传的图片的url赋值给img的src\n                 alert('生成成功')\n            })\n        }\n    });\n},\nconvertBase64UrlToBlob(urlData) {\n    let bytes = window.atob(urlData.split(',')[1]); //去掉url的头，并转换为byte\n    //处理异常,将ascii码小于0的转换为大于0\n    let ab = new ArrayBuffer(bytes.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < bytes.length; i++) {\n        ia[i] = bytes.charCodeAt(i);\n    }\n    return new Blob([ab] , {type : 'image/png'});\n}\n     \n  }\n};\n</script>\n\n<style scoped>\n.one {\n  width: 3rem;\n  height: 3rem;\n}\n.one img {\n  width: 3rem;\n  height: 3rem;\n}\n.right-btn{\n    position: relative\n    display inline-block;\n    margin-right: 20px;\n    padding: 2px 6px;\n    line-height: 20px;\n    font-size: 12px;\n    color: #fff;\n    border-radius: 4px;\n    background-color: #29e;\n    cursor: pointer\n    }\n.column-body-content{padding: 20px;}\n\n    .qr-code{\n        position:relative;\n        margin-right: 20px;\n        margin-bottom: 10px;\n        display: inline-block\n        }\n        #image{\n            width: 120px;\n            height: 120px;\n            border: 1px solid #eee;\n            }\n        p{\n            line-height: 20px;\n            font-size: 12px;\n            text-align: center\n            }\n</style>\n"],"sourceRoot":"src/components"}]}