{"remainingRequest":"/Users/lisa/Desktop/study/all/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lisa/Desktop/study/all/my-project/src/components/custom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lisa/Desktop/study/all/my-project/src/components/custom.vue","mtime":1584412985211},{"path":"/Users/lisa/Desktop/study/all/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/all/my-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/all/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/all/my-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBbGVydCBmcm9tICIuL2FsdGVyIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJjdXN0b21lcnMiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXN0b21lcjogW10sCiAgICAgIGFsdGVyOiAiIiwKICAgICAgZmxhZ2U6dHJ1ZSwKICAgICAgY2xhc3NzOiAiYWxlcnQgYWxlcnQtd2FybmluZyBhbGVydC1kaXNtaXNzaWJsZSIsCiAgICAgIGZpbHRlcklucHV0OiIiLAogICAgICBjaGlsZHJlbm1hZzonJwogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEFsZXJ0CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDmjqXmlLblrZDnu4Tku7bnmoTlgLwKICAgIGdldG1zZyhtc2cpeyAKICAgICAgdGhpcy5jaGlsZHJlbm1hZz1tc2cKICAgIH0sCiAgICAvLyDngrnlh7vot7PovazliLDor6bmg4UKICAgIGhhbmRsZWNsaWNrKGl0ZW0pewogICAgICBjb25zb2xlLmxvZyhpdGVtKTsKICAgICAgLy8gdGhpcy5idXMuJGVtaXQoIm1lc3NhZ2UiLGl0ZW0pCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAnL2N1c3RvbWVyLycsCiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIGlkOiBpdGVtLl9pZAogICAgICAgIH0sCgogICAgICB9KQogICAgfSwKICAgIC8vIOW8guatpeivt+axguaVsOaNrgogICAgYXN5bmMgZmV0Y2hDdXN0b21lcnMoKSB7CiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCIvdXNlcnMiKTsKICAgICAgdGhpcy5jdXN0b21lciA9IHJlcy5kYXRhOwogICAgICAvLyBjb25zb2xlLmxvZygiMzMzIix0aGlzLmN1c3RvbWVyKQogICAgfSwKICAgIC8vIGZldGNoQ3VzdG9tZXJzKCkgewogICAgLy8gdGhpcy4kaHR0cC5nZXQoInVzZXJzIikudGhlbigocmVzKT0+ewogICAgLy8gICB0aGlzLmN1c3RvbWVycz1yZXMuZGF0YQogICAgLy8gfSlaCiAgICAvLyB9CiAgICAvLyDmkJzntKIKICAgIAogICAgZmlsdGVyQnkoY3VzdG9tZXJzLGlucHV0dmFsdWUpewogICAgICAvLyBmaWx0ZXLmlrnms5XpgY3ljobmlbTkuKrmlbDnu4QKICAgcmV0dXJuIGN1c3RvbWVycy5maWx0ZXIoKGN1c3RvbWVyKT0+ewogICAgLy8gIG1hdGNoKCnlsIbpgY3ljobnmoTmiYDmnInmlbDmja7kuI7mkJzntKLovpPlhaXnmoTmlbDmja7mr5Tlr7nlkI7ov5Tlm54KLy8g5rOo5oSPbWF0Y2jkuI3og73pgY3ph4zmlbDlrZfvvIx0cnVlLGZhbHNlCiAgICByZXR1cm4gY3VzdG9tZXIubmFtZS5tYXRjaChpbnB1dHZhbHVlKQogICB9KQogICAgfQogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICAvLyAgIOWIm+W7uuaXtuWIpOaWreWtmOWcqHF1ZXJ555qE5riy5p+TCiAgICBpZiAodGhpcy4kcm91dGUucXVlcnkuYWx0ZXIgfHwgdGhpcy4kcm91dGUucXVlcnkuY2xhc3NzKSB7CiAgICAgICh0aGlzLmFsdGVyID0gdGhpcy4kcm91dGUucXVlcnkuYWx0ZXIpLAogICAgICAgICh0aGlzLmNsYXNzcyA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmNsYXNzcyk7CiAgICAgIC8vIHRoaXMuZmV0Y2hDdXN0b21lcnMoKQogICAgfQogICAgdGhpcy5mZXRjaEN1c3RvbWVycygpOwogICAgY29uc29sZS5sb2coImN1c3RvbWVyc+mhtemdoiIpCiAgfQogIC8vIHVwZGF0ZWQoKXt0aGlzLmZldGNoQ3VzdG9tZXJzKCl9Cn0KCg=="},{"version":3,"sources":["custom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"custom.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"customers container\">\n    <h1 class=\"page-header\">用户管理系统</h1>\n    <!-- v-if判断alter存在情况 -->\n    <Alert v-if=\"alter\" @toparents=\"getmsg\" :message=\"alter\" :classs=\"classs\" v-show=\"flage\"></Alert>\n    <input type=\"text\" class=\"form-control\" placeholder=\"搜索\" v-model=\"filterInput\"/>\n    \n    <!-- 接收子组件的值 -->\n    <!-- <Alert  @toparents=\"getmsg\" :message=\"alter\" :classs=\"classs\" v-show=\"flage\"></Alert> -->\n    <table  class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>姓名</th>\n          <th>电话</th>\n          <th>邮箱</th>\n          <th></th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <!-- 遍历搜索的东西，触发filterBy方法遍历的时候和搜索框内容进行匹配 例如name-->\n        <!-- 如果不搜索，遍历的就是所有数据 -->\n        <tr v-for=\"(item,index) in filterBy(customer,filterInput)\" :key=\"index\">\n          <td>{{item.name}}</td>\n          <td>{{item.phone}}</td>\n          <td>{{item.email}}</td>\n          <!-- 通过对应的id查看详情  拼接id-->\n          <!-- 在details中通过携带id发送后台请求数据:to是因为to现在的值是变量要绑定，如果是单纯的字符串就不需要绑定-->\n          <td>\n            <!-- <router-link class=\"btn btn-default\" :to=\"'/customer/'+item[index]._id\" style=\"backgroundcolor:blue \">查看详情</router-link> -->\n            <!-- <router-link class=\"btn btn-default\" :to=\"'/customer/'+item._id\" style=\"backgroundcolor:blue \" >查看详情</router-link> -->\n            <div class=\"btn btn-default\" style=\"backgroundcolor:blue\" @click=\"handleclick(item)\">查看详情</div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    \n  </div>\n</template>\n\n<script>\nimport Alert from \"./alter\";\nexport default {\n  name: \"customers\",\n  data() {\n    return {\n      customer: [],\n      alter: \"\",\n      flage:true,\n      classs: \"alert alert-warning alert-dismissible\",\n      filterInput:\"\",\n      childrenmag:''\n    };\n  },\n  components: {\n    Alert\n  },\n  methods: {\n    // 接收子组件的值\n    getmsg(msg){ \n      this.childrenmag=msg\n    },\n    // 点击跳转到详情\n    handleclick(item){\n      console.log(item);\n      // this.bus.$emit(\"message\",item)\n      this.$router.push({\n        path: '/customer/',\n        query: {\n          id: item._id\n        },\n\n      })\n    },\n    // 异步请求数据\n    async fetchCustomers() {\n      const res = await this.$http.get(\"/users\");\n      this.customer = res.data;\n      // console.log(\"333\",this.customer)\n    },\n    // fetchCustomers() {\n    // this.$http.get(\"users\").then((res)=>{\n    //   this.customers=res.data\n    // })Z\n    // }\n    // 搜索\n    \n    filterBy(customers,inputvalue){\n      // filter方法遍历整个数组\n   return customers.filter((customer)=>{\n    //  match()将遍历的所有数据与搜索输入的数据比对后返回\n// 注意match不能遍里数字，true,false\n    return customer.name.match(inputvalue)\n   })\n    }\n  },\n\n  created() {\n    //   创建时判断存在query的渲染\n    if (this.$route.query.alter || this.$route.query.classs) {\n      (this.alter = this.$route.query.alter),\n        (this.classs = this.$route.query.classs);\n      // this.fetchCustomers()\n    }\n    this.fetchCustomers();\n    console.log(\"customers页面\")\n  }\n  // updated(){this.fetchCustomers()}\n}\n\n</script>\n\n<style>\n\n</style>"]}]}