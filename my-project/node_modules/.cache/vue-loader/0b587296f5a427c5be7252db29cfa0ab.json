{"remainingRequest":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/imgupload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/imgupload.vue","mtime":1587974711765},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBRUkNvZGUgZnJvbSAicXJjb2RlanMyIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtSW5saW5lOiB7CiAgICAgICAgaW1nOiAiIgogICAgICB9LAogICAgICBmbGFnZTogZmFsc2UsCiAgICAgIGJhc2U2NDogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGxvYWRQaG90byhlKSB7CiAgICAgIC8vIOWIqeeUqGZpbGVSZWFkZXLlr7nosaHojrflj5ZmaWxlCiAgICAgIHZhciBmaWxlID0gZS50YXJnZXQuZmlsZXNbMF07CiAgICAgIHZhciBmaWxlc2l6ZSA9IGZpbGUuc2l6ZTsKICAgICAgdmFyIGZpbGVuYW1lID0gZmlsZS5uYW1lOwogICAgICBjb25zb2xlLmxvZyhmaWxlbmFtZSk7CiAgICAgIC8vIDIsNjIxLDQ0MCAgIDJNCiAgICAgIGlmIChmaWxlc2l6ZSA+IDIxMDE0NDApIHsKICAgICAgICAvLyDlm77niYflpKfkuo4yTUIKICAgICAgfQogICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSBlID0+IHsKICAgICAgICAvLyDor7vlj5bliLDnmoTlm77niYdiYXNlNjQg5pWw5o2u57yW56CBIOWwhuatpOe8lueggeWtl+espuS4suS8oOe7meWQjuWPsOWNs+WPrwogICAgICAgIHZhciBpbWdjb2RlID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgIC8vIGxldCB0aGF0PXRoaXM7CiAgICAgICAgdGhpcy5mb3JtSW5saW5lLmltZyA9IGltZ2NvZGU7CiAgICAgICAgLy8gY29uc29sZS5sb2coMTExLGltZ2NvZGUpOwogICAgICAgIHRoaXMuJGh0dHAKICAgICAgICAgIC5wb3N0KCIvdXBsb2Fkcy90cmFuc2ZlciIsIHsKICAgICAgICAgICAgZmlsZW5hbWU6IGZpbGVuYW1lLAogICAgICAgICAgICBmaWxlc2l6ZTogZmlsZXNpemUsCiAgICAgICAgICAgIGJhc2U2NDogaW1nY29kZQogICAgICAgICAgfSkKICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgIHRoaXMuYmFzZTY0ID0gcmVzLmRhdGEuYmFzZTY0OwogICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMuZGF0YSkKICAgICAgICAgICAgdGhpcy5mbGFnZSA9IHRydWU7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCLlm77niYfkuIrkvKDmiJDlip/vvIEiKTsKICAgICAgICAgIH0pOwogICAgICB9OwogICAgfSwKICAgIC8vIOS6jOe7tOeggQogICAgbWFrZVFSQ29kZSgpIHsKICAgIFFSQ29kZS50b0RhdGFVUkwoImh0dHA6Ly9hYWEudnYuY29tL2VycC9jYXJkP2F1dGhrZXk9MjEzc2RhYyIpLnRoZW4oaW1nRGF0YSA9PiB7CiAgICAgICAgaWYoaW1nRGF0YSkgewogICAgICAgICAgICBsZXQgZmlsZSA9IHRoaXMuY29udmVydEJhc2U2NFVybFRvQmxvYihpbWdEYXRhKTsKICAgICAgICAgICAgLy8g5LiK5Lyg5Yiw5pyN5Yqh5Zmo77yI6L+Z6YeM5piv5LiK5Lyg5Yiw6Zi/6YeM5LqR77yMdGhpcy5vc3PmmK/nm7TmjqXmiorpmL/ph4zkupHnmoRvc3Pov57mjqXkvZzkuLpWdWXlr7nosaHnmoTlsZ7mgKfmnaXosIPnlKgscHV05piv5LiK5Lyg5paH5Lu255qE5pa55rOV77yJCiAgICAgICAgICAgIHRoaXMub3NzLnB1dCgncXJjb2RlJyArIE1hdGgucmFuZG9tKCkqMTAgKyAnLnBuZycsIGZpbGUpLnRoZW4ocmVzdWx0ID0+IHsKICAgICAgICAgICAgICAgICB0aGlzLnFyY29kZSA9IHJlc3VsdC51cmw7IC8vIOWwhuW3suS4iuS8oOeahOWbvueJh+eahHVybOi1i+WAvOe7mWltZ+eahHNyYwogICAgICAgICAgICAgICAgIGFsZXJ0KCfnlJ/miJDmiJDlip8nKQogICAgICAgICAgICB9KQogICAgICAgIH0KICAgIH0pOwp9LApjb252ZXJ0QmFzZTY0VXJsVG9CbG9iKHVybERhdGEpIHsKICAgIGxldCBieXRlcyA9IHdpbmRvdy5hdG9iKHVybERhdGEuc3BsaXQoJywnKVsxXSk7IC8v5Y675o6JdXJs55qE5aS077yM5bm26L2s5o2i5Li6Ynl0ZQogICAgLy/lpITnkIblvILluLgs5bCGYXNjaWnnoIHlsI/kuo4w55qE6L2s5o2i5Li65aSn5LqOMAogICAgbGV0IGFiID0gbmV3IEFycmF5QnVmZmVyKGJ5dGVzLmxlbmd0aCk7CiAgICBsZXQgaWEgPSBuZXcgVWludDhBcnJheShhYik7CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWFbaV0gPSBieXRlcy5jaGFyQ29kZUF0KGkpOwogICAgfQogICAgcmV0dXJuIG5ldyBCbG9iKFthYl0gLCB7dHlwZSA6ICdpbWFnZS9wbmcnfSk7Cn0KICAgICAKICB9Cn07Cg=="},{"version":3,"sources":["imgupload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"imgupload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"power\">\n    <input @change=\"uploadPhoto($event)\" type=\"file\" class=\"kyc-passin\" />\n    <img v-if=\"flage\" :src=\"base64\" alt=\"上传图片\" style=\"width:400px;height:400px \" />\n    <!-- // 这种可以打开相机或文件，\"jpg,png,gif\"这种打开只能上传特定文件且没有相机 -->\n    <div>\n      <span class=\"right-btn\" @click=\"makeQRCode\">生成二维码</span>\n    </div>\n    <div class=\"column-body-content text-center\">\n      <div class=\"qr-code\">\n        <img id=\"image\" :src=\"qrcode\" />\n        <p>扫码预览</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport QRCode from \"qrcodejs2\";\nexport default {\n  data() {\n    return {\n      formInline: {\n        img: \"\"\n      },\n      flage: false,\n      base64: \"\"\n    };\n  },\n  methods: {\n    uploadPhoto(e) {\n      // 利用fileReader对象获取file\n      var file = e.target.files[0];\n      var filesize = file.size;\n      var filename = file.name;\n      console.log(filename);\n      // 2,621,440   2M\n      if (filesize > 2101440) {\n        // 图片大于2MB\n      }\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = e => {\n        // 读取到的图片base64 数据编码 将此编码字符串传给后台即可\n        var imgcode = e.target.result;\n        // let that=this;\n        this.formInline.img = imgcode;\n        // console.log(111,imgcode);\n        this.$http\n          .post(\"/uploads/transfer\", {\n            filename: filename,\n            filesize: filesize,\n            base64: imgcode\n          })\n          .then(res => {\n            this.base64 = res.data.base64;\n            // console.log(res.data)\n            this.flage = true;\n            // console.log(\"图片上传成功！\");\n          });\n      };\n    },\n    // 二维码\n    makeQRCode() {\n    QRCode.toDataURL(\"http://aaa.vv.com/erp/card?authkey=213sdac\").then(imgData => {\n        if(imgData) {\n            let file = this.convertBase64UrlToBlob(imgData);\n            // 上传到服务器（这里是上传到阿里云，this.oss是直接把阿里云的oss连接作为Vue对象的属性来调用,put是上传文件的方法）\n            this.oss.put('qrcode' + Math.random()*10 + '.png', file).then(result => {\n                 this.qrcode = result.url; // 将已上传的图片的url赋值给img的src\n                 alert('生成成功')\n            })\n        }\n    });\n},\nconvertBase64UrlToBlob(urlData) {\n    let bytes = window.atob(urlData.split(',')[1]); //去掉url的头，并转换为byte\n    //处理异常,将ascii码小于0的转换为大于0\n    let ab = new ArrayBuffer(bytes.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < bytes.length; i++) {\n        ia[i] = bytes.charCodeAt(i);\n    }\n    return new Blob([ab] , {type : 'image/png'});\n}\n     \n  }\n};\n</script>\n\n<style scoped>\n.one {\n  width: 3rem;\n  height: 3rem;\n}\n.one img {\n  width: 3rem;\n  height: 3rem;\n}\n.right-btn{\n    position: relative\n    display inline-block;\n    margin-right: 20px;\n    padding: 2px 6px;\n    line-height: 20px;\n    font-size: 12px;\n    color: #fff;\n    border-radius: 4px;\n    background-color: #29e;\n    cursor: pointer\n    }\n.column-body-content{padding: 20px;}\n\n    .qr-code{\n        position:relative;\n        margin-right: 20px;\n        margin-bottom: 10px;\n        display: inline-block\n        }\n        #image{\n            width: 120px;\n            height: 120px;\n            border: 1px solid #eee;\n            }\n        p{\n            line-height: 20px;\n            font-size: 12px;\n            text-align: center\n            }\n</style>\n"]}]}