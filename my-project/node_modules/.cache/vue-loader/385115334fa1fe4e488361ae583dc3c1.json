{"remainingRequest":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/imgupload.vue?vue&type=style&index=0&id=cef824b8&scoped=true&lang=css&","dependencies":[{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/imgupload.vue","mtime":1587974711765},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5vbmUgewogIHdpZHRoOiAzcmVtOwogIGhlaWdodDogM3JlbTsKfQoub25lIGltZyB7CiAgd2lkdGg6IDNyZW07CiAgaGVpZ2h0OiAzcmVtOwp9Ci5yaWdodC1idG57CiAgICBwb3NpdGlvbjogcmVsYXRpdmUKICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrOwogICAgbWFyZ2luLXJpZ2h0OiAyMHB4OwogICAgcGFkZGluZzogMnB4IDZweDsKICAgIGxpbmUtaGVpZ2h0OiAyMHB4OwogICAgZm9udC1zaXplOiAxMnB4OwogICAgY29sb3I6ICNmZmY7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjllOwogICAgY3Vyc29yOiBwb2ludGVyCiAgICB9Ci5jb2x1bW4tYm9keS1jb250ZW50e3BhZGRpbmc6IDIwcHg7fQoKICAgIC5xci1jb2RlewogICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlOwogICAgICAgIG1hcmdpbi1yaWdodDogMjBweDsKICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jawogICAgICAgIH0KICAgICAgICAjaW1hZ2V7CiAgICAgICAgICAgIHdpZHRoOiAxMjBweDsKICAgICAgICAgICAgaGVpZ2h0OiAxMjBweDsKICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VlZTsKICAgICAgICAgICAgfQogICAgICAgIHB7CiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4OwogICAgICAgICAgICBmb250LXNpemU6IDEycHg7CiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcgogICAgICAgICAgICB9Cg=="},{"version":3,"sources":["imgupload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"imgupload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"power\">\n    <input @change=\"uploadPhoto($event)\" type=\"file\" class=\"kyc-passin\" />\n    <img v-if=\"flage\" :src=\"base64\" alt=\"上传图片\" style=\"width:400px;height:400px \" />\n    <!-- // 这种可以打开相机或文件，\"jpg,png,gif\"这种打开只能上传特定文件且没有相机 -->\n    <div>\n      <span class=\"right-btn\" @click=\"makeQRCode\">生成二维码</span>\n    </div>\n    <div class=\"column-body-content text-center\">\n      <div class=\"qr-code\">\n        <img id=\"image\" :src=\"qrcode\" />\n        <p>扫码预览</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport QRCode from \"qrcodejs2\";\nexport default {\n  data() {\n    return {\n      formInline: {\n        img: \"\"\n      },\n      flage: false,\n      base64: \"\"\n    };\n  },\n  methods: {\n    uploadPhoto(e) {\n      // 利用fileReader对象获取file\n      var file = e.target.files[0];\n      var filesize = file.size;\n      var filename = file.name;\n      console.log(filename);\n      // 2,621,440   2M\n      if (filesize > 2101440) {\n        // 图片大于2MB\n      }\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = e => {\n        // 读取到的图片base64 数据编码 将此编码字符串传给后台即可\n        var imgcode = e.target.result;\n        // let that=this;\n        this.formInline.img = imgcode;\n        // console.log(111,imgcode);\n        this.$http\n          .post(\"/uploads/transfer\", {\n            filename: filename,\n            filesize: filesize,\n            base64: imgcode\n          })\n          .then(res => {\n            this.base64 = res.data.base64;\n            // console.log(res.data)\n            this.flage = true;\n            // console.log(\"图片上传成功！\");\n          });\n      };\n    },\n    // 二维码\n    makeQRCode() {\n    QRCode.toDataURL(\"http://aaa.vv.com/erp/card?authkey=213sdac\").then(imgData => {\n        if(imgData) {\n            let file = this.convertBase64UrlToBlob(imgData);\n            // 上传到服务器（这里是上传到阿里云，this.oss是直接把阿里云的oss连接作为Vue对象的属性来调用,put是上传文件的方法）\n            this.oss.put('qrcode' + Math.random()*10 + '.png', file).then(result => {\n                 this.qrcode = result.url; // 将已上传的图片的url赋值给img的src\n                 alert('生成成功')\n            })\n        }\n    });\n},\nconvertBase64UrlToBlob(urlData) {\n    let bytes = window.atob(urlData.split(',')[1]); //去掉url的头，并转换为byte\n    //处理异常,将ascii码小于0的转换为大于0\n    let ab = new ArrayBuffer(bytes.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < bytes.length; i++) {\n        ia[i] = bytes.charCodeAt(i);\n    }\n    return new Blob([ab] , {type : 'image/png'});\n}\n     \n  }\n};\n</script>\n\n<style scoped>\n.one {\n  width: 3rem;\n  height: 3rem;\n}\n.one img {\n  width: 3rem;\n  height: 3rem;\n}\n.right-btn{\n    position: relative\n    display inline-block;\n    margin-right: 20px;\n    padding: 2px 6px;\n    line-height: 20px;\n    font-size: 12px;\n    color: #fff;\n    border-radius: 4px;\n    background-color: #29e;\n    cursor: pointer\n    }\n.column-body-content{padding: 20px;}\n\n    .qr-code{\n        position:relative;\n        margin-right: 20px;\n        margin-bottom: 10px;\n        display: inline-block\n        }\n        #image{\n            width: 120px;\n            height: 120px;\n            border: 1px solid #eee;\n            }\n        p{\n            line-height: 20px;\n            font-size: 12px;\n            text-align: center\n            }\n</style>\n"]}]}