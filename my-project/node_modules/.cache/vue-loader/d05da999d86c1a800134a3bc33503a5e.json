{"remainingRequest":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/children.vue?vue&type=style&index=0&id=28aa128f&scoped=true&lang=css&","dependencies":[{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/src/components/children.vue","mtime":1588140472543},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lisa/Desktop/study/mongodb+express/my-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnZpZXdCb3ggewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogNTAlOwogIG92ZXJmbG93LXk6IGF1dG87CiAgcGFkZGluZzogMTBweDt9CiAgbGkgewogICAgZGlzcGxheTogZmxleDsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO30KICAgIHAgewogICAgICB3aWR0aDogMzMuMzMlOwogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIGZvbnQtc2l6ZTogMC43MjkxNjY2NjY2NjY2NjY3dnc7CiAgICAgIGxpbmUtaGVpZ2h0OiAxLjM1NDE2NjY2NjY2NjY2Njd2dzsKICAgIH0KICAgICAgc3BhbiB7CiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgIHdpZHRoOiAyLjA4MzMzMzMzMzMzMzMzMzV2dzsKICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgICAgICBtYXJnaW4tcmlnaHQ6IDJweDsKICAgICAgfQo="},{"version":3,"sources":["children.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"children.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"viewBox\" style=\"height: 90%;\" ref=\"viewBox\" @scroll=\"Scroll\">\n    <ul ref=\"uls\">\n      <li v-for=\"(item,index) in lists\" :key=\"'read'+index\">\n        <p>{{item.name}}</p>\n        <p :class=\"{ 'red' : index+1<4 }\">NO.{{index+1}}</p>\n        <p style=\"color:#FF3B0D;\">\n          <span>{{item.score}}</span>分\n        </p>\n      </li>\n    </ul>\n  </div>\n</template>\n \n<script>\nexport default {\n  props: {\n    list: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    }\n  },\n  watch: {},\n  data() {\n    return {\n      name: \"懒加载的列表\",\n      nowPage: 1, //当前页码\n      ulH: 0, //滚动内容实际的高度\n      ulHsj: 0, //滚动内容实际的高度\n      space: 0, //差值\n      lists: [\n        {},\n        {},\n        {},\n        {},\n        {},\n        {},\n        {}\n      ]\n    };\n  },\n  created() {},\n  mounted() {\n    //页面添加滚动事件\n    document.addEventListener(\"scroll\", this.Scroll);\n    this.initScroll();\n  },\n  methods: {\n    /**\n     * 初始化赋值\n     * */\n    initScroll() {\n      this.ulH = this.$refs.viewBox.clientHeight; //滚动条盒子的高度\n      this.ulHsj = this.$refs.uls.clientHeight; //滚动内容实际的高度\n      this.space = this.ulHsj - this.ulH; //差值\n    },\n    /**\n     * 滚动条滚动到底部触发\n     * */\n    Scroll() {\n      let scrollHeight = this.$refs.viewBox.scrollTop; //在盒子内部滚动高度\n      if (scrollHeight >= this.space) {\n        let newArr = [\n          {},\n          {},\n          {},\n          {},\n          {},\n          {},\n          {},\n          {},\n        ];\n        this.lists = this.lists.concat(newArr);\n        this.initScroll(); //调用下初始化方法\n      }\n    }\n  },\n  components: {},\n  beforeDestroy() {}\n};\n</script>\n<style  scoped>\n.viewBox {\n  width: 100%;\n  height: 50%;\n  overflow-y: auto;\n  padding: 10px;}\n  li {\n    display: flex;\n    border-bottom: 1px solid #eee;}\n    p {\n      width: 33.33%;\n      text-align: center;\n      font-size: 0.7291666666666667vw;\n      line-height: 1.3541666666666667vw;\n    }\n      span {\n        display: inline-block;\n        width: 2.0833333333333335vw;\n        text-align: right;\n        margin-right: 2px;\n      }\n</style>"]}]}